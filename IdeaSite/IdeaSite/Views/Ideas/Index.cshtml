@model IEnumerable<IdeaSite.Models.Idea>
@{
    ViewBag.Title = "Ideas";
}

<h1>Great Ideas</h1>
@using (Html.BeginForm("Index", "Ideas", FormMethod.Get))
{
    <div>
        <div class="editor-label">
            <b>Search By:</b>
            @Html.RadioButton("searchBy", "All", true) <text> All </text>
            @Html.RadioButton("searchBy", "Title") <text> Title </text>
            @Html.RadioButton("searchBy", "Description") <text> Description </text>
        </div>
        <p>
            <b>Filter By:</b>
            @*
                Default starting value shows "Accepted" Ideas only (checked). This is because users
                will only be able to see "Accepted" Ideas. Administrators will have the ability to change
                checkboxes as they please. The checkboxes will maintain their status across searches; however,
                a refresh (or Back to List) will go back to the original state of Accepted ideas only. This
                is due to the way "Back to list" is implemented, because the status is not maintained in the
                ViewBag.
            *@
            @{ string[] sortByStatus = { "false", "true", "false" }; }
            @*Html.CheckBox("sortByStatus[0]", sortByStatus[0] == "true", new { @checked = "false"  }) <text>  Submitted  </text>*@
            @Html.CheckBox("sortByStatus[0]", sortByStatus[0] == "true") <text>  Submitted  </text>
            @Html.CheckBox("sortByStatus[1]", sortByStatus[1] == "true") <text>  Accepted   </text>
            @Html.CheckBox("sortByStatus[2]", sortByStatus[2] == "true") <text>  Denied     </text>
        </p>
        <p>
            @Html.TextBox("search") <button type="submit" class="btn btn-default btn-sm">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        </p>
    </div>
                }
<!--Display message informing user of successful idea submission-->
@Html.Action(actionName: "TempMessage", controllerName: "Message")

@foreach (var item in Model)
{

    <div class="container-fluid bsolid">
        <div class="row content">
            <div class="col-md-12">
                <h4>Title: @Html.DisplayFor(modelItem => item.title)</h4>
                <h5><span class="glyphicon glyphicon-time"></span> Posted by @Html.DisplayFor(modelItem => item.cre_user) on @Html.DisplayFor(modelItem => item.cre_date)</h5>
                <hr>
                <h5><span class="label label-success">Description:</span></h5>
                @Html.DisplayFor(modelItem => item.body)
                <br />
                <br />
                <div class="btn-group">
                    <button type="button" class="btn btn-default btn-sm">@Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "my-class" })</button>
                    <button type="button" class="btn btn-default btn-sm">@Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "my-class" })</button>
                    <button type="button" class="btn btn-default btn-sm">@Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "my-class" })</button>
                    <button type="button" class="btn btn-default btn-sm">@Html.ActionLink("Comments", "Index", "Comments", item, new { @class = "my-class" })</button>
                    @if (item.statusCode == "Submitted")
                    {
                        <button type="button" class="btn btn-default btn-sm">@Html.ActionLink("Approval", "Approval", new { id = item.ID }, new { @class = "my-class" })</button>}
                </div>
            </div>
        </div>
        <br>
    </div>
    <br>
}

<p><b>Click below to submit new Idea</b></p>
<button type="button" class="btn btn-default btn-lg">@Html.ActionLink("Create New", "Create")</button>
