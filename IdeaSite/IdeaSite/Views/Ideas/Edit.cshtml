@model IdeaSite.Models.FileSelectionViewModel

@{
    ViewBag.Title = "Edit";
}

<h1>Edit</h1>
<hr>


@using (Html.BeginForm("Edit", "Ideas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idea.ID)
        @Html.HiddenFor(model => model.idea.cre_date)
        @Html.HiddenFor(model => model.idea.mod_date)
        @Html.HiddenFor(model => model.idea.cre_user)
        @Html.HiddenFor(model => model.idea.statusCode)
        @Html.HiddenFor(model => model.idea.email)
        @Html.HiddenFor(model => model.idea.mod_date)
        @Html.HiddenFor(model => model.idea.commentsNumber)


        <div class="form-group">
            <div class="col-md-10">
                <!--Display an error message if the submitted title is not unique.-->
                @Html.Action(actionName: "TempMessage", controllerName: "Message")
            </div>
        </div>

        <!--Edit box for the title of the idea-->
        <div class="form-group">
            @Html.LabelFor(model => model.idea.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idea.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idea.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Edit box for the body of the idea-->
        <div class="form-group">
            @Html.LabelFor(model => model.idea.body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 multiline-field">
                @Html.EditorFor(model => model.idea.body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idea.body, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Display box for the denialReason. This only appears if the status is set to denied.-->
        @if (Model.idea.statusCode == "Denied")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.idea.denialReason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.idea.denialReason)
                    @Html.ValidationMessageFor(model => model.idea.denialReason, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <!--This table is for displaying any attachments associated with an idea.
            It allows the user to download and/or delete current attachments-->
        @if (Model.Attachs.Count > 0)
        {
            <div>
                <input type="checkbox" id="checkall" /><span>Select All</span>
            </div>

        <!--Wrap the table element in a div named "checkboxes":-->
            <div id="checkboxes">
                <table class="table">
                    <tr><th><span class="glyphicon glyphicon-paperclip"></span> attachments:</th><th></th></tr>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Delete
                        </th>
                    </tr>
                    @Html.EditorFor(model => model.Attachs, @"~\Views\Shared\EditorTemplates\SelectFileEditorModelView")
                </table>
                @*Close the "checkboxes" div element:*@
            </div>
        }
        else
        {
            @Html.Label("No attachments", new { @class = "control-label col-md-6" })
            <br />
        }
        <br />
        <br />

        <div class="text-danger">Files with these extensions may not be uploaded to to Great Ideas: .exe, .js, .htm, .html</div>


        <!--Button used to upload any new attachments-->
        <div class="form-group">
            @Html.Label("New Attachments", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="files" name="files" value="" multiple="multiple" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 btn-group">
                <input type="submit" name="operation" value="Save" class="btn btn-default btn-sm" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm" })
            </div>
        </div>
    </div>
}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function toggleChecked(status) {
            $("#checkboxes input").each(function () {

                // Set the checked status of each to match the
                // checked status of the check all checkbox:
                $(this).prop("checked", status);
            });
        }

        $(document).ready(function () {

            //Set the default value of the global checkbox to true:
            $("#checkall").prop('checked', true);

            // Attach the call to toggleChecked to the
            // click event of the global checkbox:
            $("#checkall").click(function () {
                var status = $("#checkall").prop('checked');
                toggleChecked(status);
            });
        });
    </script>
}