@model IdeaSite.Models.Idea

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Ideas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Idea</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.statusCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Won't be here normally.
                @Html.EditorFor(model => model.statusCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.statusCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group @Model.statusCode">
            @Html.LabelFor(model => model.denialReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                This will only be visible like this for PPMO group. User will only have a text block to see the reason.
                @Html.EditorFor(model => model.denialReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.denialReason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("File", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="files" name="files" value="" multiple="multiple" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
